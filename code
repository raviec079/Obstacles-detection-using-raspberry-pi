#code
CODE: 
import RPi.GPIO as GPIO 
import time 
import matplotlib.pyplot as plt 
# Set GPIO pin numbers 
GPIO.setwarnings(False) 
GPIO.setmode(GPIO.BCM) 
TRIG = 17 
ECHO = 18 
LED_PIN = 21 # Choose a GPIO pin for the LED 
MOTOR_PIN=20 
# Set up GPIO pins 
GPIO.setup(TRIG, GPIO.OUT) 
GPIO.setup(ECHO, GPIO.IN) 
GPIO.setup(LED_PIN, GPIO.OUT) # Set the LED pin as an output 
GPIO.setup(MOTOR_PIN, GPIO.OUT) 
# Initialize lists to store data for plotting 
distances = [] 
timestamps = [] 
try: 
 while True: 
 # Trigger the ultrasonic sensor 
 GPIO.output(TRIG, True) 
 time.sleep(0.001) 
 GPIO.output(TRIG, False) 
 while GPIO.input(ECHO) == 0: 
 pulse_start = time.time() 
 while GPIO.input(ECHO) == 1: 
 pulse_end = time.time() 
 pulse_duration = pulse_end - pulse_start 
 # Calculate distance in centimeters 
 distance = (pulse_duration * 34300) / 2 
 print("Distance: {:.2f} cm".format(distance)) 
 # Store the data for plotting 
 distances.append(distance) 
 timestamps.append(time.time()) 
 # Create a real-time plot 
 plt.plot(timestamps, distances) 
 plt.xlabel('Time (s)') 
 plt.ylabel('Distance (cm)') 
 plt.pause(0.1) # Update the plot every 0.1 seconds 
 # Control the LED based on distance 
 if distance <= 10: 
 GPIO.output(LED_PIN, GPIO.HIGH) 
 GPIO.output(MOTOR_PIN,True) 
 else: 
 GPIO.output(LED_PIN, GPIO.LOW) 
 GPIO.output(MOTOR_PIN,False) 
 
except KeyboardInterrupt: 
 GPIO.cleanup() 
